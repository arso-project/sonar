info:
  version: 0.0.1
  title: sonar
  license:
    name: GPL-3.0
  description: '[Specification JSON](/api-spec)'
paths:
  /api/info:
    get:
      summary: Get a list of all collections available on this server.
      parameters: []
      responses:
        '200':
          description: info object about the running sonar instance 
          content:
            application/json:
              schema:
                type: object
                description: list of Collections
                properties:
                 collections:
                    type: object
                    description: list of Collections
  /api/collection:
    post:
      summary: Creates a collection.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name: 
                  description: The name of collection that should be created
                  type: string
                key:
                  description: Hex string of an existing collection. Will then sync this collection instead of creating a new, empty collection.
                  type: string
                alias:
                  description: When setting key, alias is required and is your nick name within this collection.
                  type: string
              required:
                - name
      responses:
        '200':
          description: Collection created
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    example: 12c7408b50773b7145e5d85967809a1b7e56ccebc21fce34a943c6dc87743983
        '500':
          description: error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: alias is required
     
  /api/commands/.websocket:
    get:
      summary: /api/commands/.websocket
      parameters: []
      responses: 
        '200':
          description: connection established
  '/api/collection/{collection}':
    patch:
      summary: '/api/collection/{collection}'
      parameters:
        - name: collection
          in: path
          description: the name of collection 
          required: true
          schema:
            type: string
      responses: 
        '200':
          description: Collection patched
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    example: 12c7408b50773b7145e5d85967809a1b7e56ccebc21fce34a943c6dc87743983
    get:
      summary: '/api/collection/{collection}'
      
      parameters:
        - name: collection
          in: path
          description: the name of collection 
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection object
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Test
                  key:
                    type: string
                    example: 40c7408b50773b7145e5d85967809a1b7e56ccebc21fce34a943c6dc87743983
                  feeds:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        discoveryKey:
                          type: string
                        writable:
                          type: boolean
                        length:
                          type: number
                        byteLength:
                          type: number
                        name:
                          type: string
                        type:
                          type: string
                        info:
                          type: object
                          properties:
                            name:
                              type: string
                            type:
                              type: string
                            key:
                              type: string
                        downloadedBlocks:
                          type: number
                        stats:
                          type: object
                          properties:
                            peers:
                              type: array
                              items: {}
                            totals:
                              type: object
                              properties:
                                downloadedBlocks:
                                  type: number
                                downloadedBytes:
                                  type: number
                                uploadedBlocks:
                                  type: number
                                uploadedBytes:
                                  type: number
                    example:
                      - key: 40c7408b50773b7145e5d85967809a1b7e56ccebc21fce34a943c6dc87743983
                        discoveryKey: ef1bf9a89bf601e85ecc87d7b339f428638ac7bb7fcd35dee311a2ff27a22d24
                        writable: true
                        length: 3
                        byteLength: 905
                        name: root
                        type: sonar.db
                        info:
                          name: root
                          type: sonar.db
                          key: 40c7408b50773b7145e5d85967809a1b7e56ccebc21fce34a943c6dc87743983
                        downloadedBlocks: 3
                        stats:
                          peers: []
                          totals:
                            downloadedBlocks: 0
                            downloadedBytes: 0
                            uploadedBlocks: 0
                            uploadedBytes: 0
                  kappa:
                    type: object
                    properties:
                      kv:
                        type: object
                        properties:
                          status:
                            type: string
                            example: running
                      records:
                        type: object
                        properties:
                          status:
                            type: string
                            example: running
                      index:
                        type: object
                        properties:
                          status:
                            type: string
                            example: running
                      history:
                        type: object
                        properties:
                          status:
                            type: string
                            example: running
                      relations:
                        type: object
                        properties:
                          status:
                            type: string
                            example: running
                      search:
                        type: object
                        properties:
                          status:
                            type: string
                            example: running
                  opened:
                    type: boolean
                    example: true
                  discoveryKey:
                    type: string
                    example: ef1bf9a89bf601e85ecc87d7b339f428638ac7bb7fcd35dee311a2ff27a22d24
                  localKey:
                    type: string
                    example: 40c7408b50773b7145e5d85967809a1b7e56ccebc21fce34a943c6dc87743983
                  localDrive:
                    type: string
                    example: 1af5e75fe62fc2654245c3ef559f26a8047ac87e9c7ca3ab5909598bb9342a68
                  fs:
                    type: object
                    properties:
                      1af5e75fe62fc2654245c3ef559f26a8047ac87e9c7ca3ab5909598bb9342a68:
                        type: object
                        properties:
                          discoveryKey:
                            type: string
                            example: eb357ec1d651e2fcd0f3ebf43328b84bb2903a73671c03794f6483920f026917
                          version:
                            type: number
                            example: 1
                          writable:
                            type: boolean
                            example: true
                          contentWritable:
                            type: boolean
                            example: true
                          metadata:
                            type: object
                            properties:
                              key:
                                type: string
                                example: 1af5e75fe62fc2654245c3ef559f26a8047ac87e9c7ca3ab5909598bb9342a68
                              writable:
                                type: boolean
                                example: true
                              length:
                                type: number
                                example: 1
                              byteLength:
                                type: number
                                example: 45
                              downloadedBlocks:
                                type: number
                                example: 1
                              stats:
                                type: object
                                properties:
                                  peers:
                                    type: array
                                    items: {}
                                    example:
                                      - null
                                  totals:
                                    type: object
                                    properties:
                                      downloadedBlocks:
                                        type: number
                                        example: 0
                                      downloadedBytes:
                                        type: number
                                        example: 0
                                      uploadedBlocks:
                                        type: number
                                        example: 0
                                      uploadedBytes:
                                        type: number
                                        example: 0
                          content:
                            type: object
                            properties:
                              key:
                                type: string
                                example: 50d5a3a48c0d034abd7bd6d5185df66ee981e86421f4a8d19fb223ca86506393
                              writable:
                                type: boolean
                                example: true
                              length:
                                type: number
                                example: 0
                              byteLength:
                                type: number
                                example: 0
                              downloadedBlocks:
                                type: number
                                example: 0
                              stats:
                                type: object
                                properties:
                                  peers:
                                    type: array
                                    items: {}
                                    example:
                                      - null
                                  totals:
                                    type: object
                                    properties:
                                      downloadedBlocks:
                                        type: number
                                        example: 0
                                      downloadedBytes:
                                        type: number
                                        example: 0
                                      uploadedBlocks:
                                        type: number
                                        example: 0
                                      uploadedBytes:
                                        type: number
                                        example: 0
                          mounts:
                            type: object
                            properties: {}
        '500':
          description: error object
          content:
            application/json:
              schema:
                type: object

                properties:
                  error:
                    type: string
                    example: collection 2acf3ea89ee171f95b7714ca7859455f4f558fce22fc028b85a1fb2bdb9a1083 does not exist.
                
  '/api/{collection}/fs/{drive}/*':
    get:
      summary: '/api/{collection}/fs/{drive}/*'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: drive
          in: path
          description: the key of drive
          required: true
          schema:
            type: string
      responses:
        '200':
          description: get drive
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    dev:
                      type: number
                    nlink:
                      type: number
                    rdev:
                      type: number
                    blksize:
                      type: number
                    ino:
                      type: number
                    mode:
                      type: number
                    uid:
                      type: number
                    gid:
                      type: number
                    size:
                      type: number
                    offset:
                      type: number
                    byteOffset:
                      type: number
                    blocks:
                      type: number
                    atime:
                      type: string
                    mtime:
                      type: string
                    ctime:
                      type: string
                    linkname:
                      type: string
                    mount:
                      type: string
                    metadata:
                      type: object
                      properties: {}
                    path:
                      type: string
                    name:
                      type: string
                    directory:
                      type: boolean
    put:
      summary: '/api/{collection}/fs/{drive}/*'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: drive
          in: path
          description: the key of drive
          required: true
          content:
            application/json:
              schema:
                type: string
      responses: 
        '200' :
          description: Hyperdrive 
      
  '/api/{collection}/fs/{drive}':
    get:
      summary: '/api/{collection}/fs/{drive}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: drive
          in: path
          description: the key of drive
          required: true
          schema:
            type: string
      responses: 
        '200' : 
          description: Hyperdrive
      
  '/api/{collection}/db':
    put:
      summary: '/api/{collection}/db'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
      responses:
        '200':
          description: gives you the db object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 25qhwxenmuhbq1qfggp2nfxq84
  '/api/{collection}/db/{id}':
    put:
      summary: '/api/{collection}/db/{id}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Entity id
          required: true
          schema:
            type: string
      responses: 
        '200':
          description: Record
      
    delete:
      summary: '/api/{collection}/db/{id}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: record id
          required: true
          schema:
            type: string
      responses: 
        '200' :
          description: Record deleted
      
  '/api/{collection}/db/{key}/{seq}':
    get:
      summary: '/api/{collection}/db/{key}/{seq}'
      parameters:
        - name: collection
          in: path
          description: the name of collection 
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
        - name: seq
          in: path
          description: seq
          required: true
          schema:
            type: string
      responses: 
        '200' : 
          description : Key/Seq
  '/api/{collection}/sync':
    get:
      summary: '/api/{collection}/sync'
      parameters:
        - name: collection
          in: path
          description: the name of collection that should be created
          required: true
          schema:
            type: string
      responses: 
        '200' :
          description: synced
  '/api/{collection}/query/{name}':
    post:
      summary: '/api/{collection}/query/{name}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: queryname
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Queryresponse
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    seq:
                      type: number
                    lseq:
                      type: number
                    feedType:
                      type: string
                    id:
                      type: string
                    op:
                      type: number
                    schema:
                      type: string
                    value:
                      type: object
                      properties:
                        properties:
                          type: object
                          properties:
                            label:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                            description:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                            contentUrl:
                              type: object
                              properties:
                                type:
                                  type: string
                                format:
                                  type: string
                                title:
                                  type: string
                            contentSize:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                            contentHash:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                                index:
                                  type: boolean
                            encodingFormat:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                                index:
                                  type: boolean
                            duration:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                            mediaType:
                              type: object
                              properties:
                                type:
                                  type: string
                                title:
                                  type: string
                                enum:
                                  type: array
                                  items:
                                    type: string
                                index:
                                  type: boolean
                        type:
                          type: string
                        name:
                          type: string
                        title:
                          type: string
                        $id:
                          type: string
                        key:
                          type: string
                        alias:
                          type: string
                    timestamp:
                      type: number
                    links:
                      type: array
                      items: {}
                  required:
                    - key
                    - seq
                    - lseq
                    - feedType
                    - id
                    - op
                    - schema
                    - value
                    - timestamp
                    - links
  '/api/{collection}/_query/{name}':
    post:
      summary: '/api/{collection}/_query/{name}'
      parameters:
        - name: collection
          in: path
          description: the name of collection that should be created
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: query name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: query response
  '/api/{collection}/schema':
    get:
      summary: '/api/{collection}/schema'
      parameters:
        - name: collection
          in: path
          description: the name of collection that should be created
          required: true
          schema:
            type: string
      responses:
        '200':
          description: schema
          content:
            application/json:
              schema:
                type: object
                properties:
                  core/schema:
                    type: object
                    properties:
                      properties:
                        type: object
                        properties:
                          name:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              index:
                                type: boolean
                                example: true
                      type:
                        type: string
                        example: object
                      $id:
                        type: string
                        example: core/schema
                      name:
                        type: string
                        example: core/schema
                  core/source:
                    type: object
                    properties:
                      properties:
                        type: object
                        properties:
                          type:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Type
                          key:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              pattern:
                                type: string
                                example: '^[0-9a-f]{64}$'
                              title:
                                type: string
                                example: key
                          alias:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Alias
                          description:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Description
                      type:
                        type: string
                        example: object
                      $id:
                        type: string
                        example: core/source
                      name:
                        type: string
                        example: core/source
                  core/any:
                    type: object
                    properties:
                      properties:
                        type: object
                        properties: {}
                      type:
                        type: string
                        example: object
                      $id:
                        type: string
                        example: core/any
                      name:
                        type: string
                        example: core/any
                  sonar/resource:
                    type: object
                    properties:
                      properties:
                        type: object
                        properties:
                          label:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Label
                          description:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Description
                          contentUrl:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              format:
                                type: string
                                example: uri
                              title:
                                type: string
                                example: URL to file
                          contentSize:
                            type: object
                            properties:
                              type:
                                type: string
                                example: number
                              title:
                                type: string
                                example: File size
                          contentHash:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Content hash
                              index:
                                type: boolean
                                example: true
                          encodingFormat:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Encoding format (MIME type)
                              index:
                                type: boolean
                                example: true
                          duration:
                            type: object
                            properties:
                              type:
                                type: string
                                example: number
                              title:
                                type: string
                                example: Duration in seconds
                          mediaType:
                            type: object
                            properties:
                              type:
                                type: string
                                example: string
                              title:
                                type: string
                                example: Media type
                              enum:
                                type: array
                                items:
                                  type: string
                                example:
                                  - audio
                              index:
                                type: boolean
                                example: true
                      type:
                        type: string
                        example: object
                      name:
                        type: string
                        example: sonar/resource
                      title:
                        type: string
                        example: Resource
                      $id:
                        type: string
                        example: sonar/resource
    post:
      summary: '/api/{collection}/schema'
     
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Schemata from collection
  '/api/{collection}/source/{key}':
    put:
      summary: '/api/{collection}/source/{key}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          description: Source key
          schema: 
            type: string
      responses: 
        '200':
          description: put source
  '/api/{collection}/debug':
    get:
      summary: '/api/{collection}/debug'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
      responses: 
        '200' :
          description: Debug
  '/api/{collection}/subscription/{name}':
    put:
      summary: '/api/{collection}/subscription/{name}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name for subscription
          schema:
            type: string
      responses:
        '200':
          description: subsription putted
    get:
      summary: '/api/{collection}/subscription/{name}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: the name of subscription
          required: true
          schema:
            type: string
      responses: 
        '200' :
          description: get subscription
  '/api/{collection}/subscription/{name}/sse':
    get:
      summary: '/api/{collection}/subscription/{name}/sse'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: the name of subscription
          required: true
          schema:
            type: string
      responses: 
        '200' :
          description: sse subscription
  '/api/{collection}/subscription/{name}/{cursor}':
    post:
      summary: '/api/{collection}/subscription/{name}/{cursor}'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: the name of subscription
          required: true
          schema:
            type: string
        - name: cursor  
          in: path
          description: cursor
          required: true
          schema:
            type: string
      responses: 
        '200':
          description: cursor
  '/api/{collection}/fs-info':
    get:
      summary: '/api/{collection}/fs-info'
      parameters:
        - name: collection
          in: path
          description: the name of collection
          required: true
          schema:
            type: string
      responses:
        '200':
          description: filesystem information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    key:
                      type: string
                    alias:
                      type: string
                    writable:
                      type: boolean

openapi: 3.0.0